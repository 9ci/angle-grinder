apply plugin: "yakworks.grails-plugin"
apply plugin: 'asset-pipeline'

bootRepackage.enabled = false
dependencies {
  console "org.grails:grails-console"

  compile "org.springframework.boot:spring-boot-starter-logging"
  compile "org.springframework.boot:spring-boot-autoconfigure"
  compile "org.grails:grails-core"
  compile "org.springframework.boot:spring-boot-starter-tomcat"

  compile "org.grails:grails-web-boot"

  compile "org.grails:grails-logging"
  compile "org.grails:grails-plugin-databinding"
  compile "org.grails:grails-plugin-services"

  //FIXME comment why is this needed? without we get only here gorm.tools.testing.TestDataJsonBuildAllSpec > test includes * FAILED
  compile 'org.grails.plugins:grails-java8:1.2.3'

  compile "org.grails.plugins:events"
  compile "org.codehaus.gpars:gpars:1.2.1"
  compile 'com.bertramlabs.plugins:asset-pipeline-grails:3.0.11'
  compile 'com.bertramlabs.plugins:coffee-asset-pipeline:3.0.11'
  //used for json parsing but require it to be added to project that uses this
  compileOnly "org.grails.plugins:views-json:$versionViews"
  compileOnly "org.grails.plugins:views-json-templates:$versionViews"
  compileOnly "org.grails:views-json-testing-support:$versionViews"

  //this is for GrailsParameterMapRowMapper that uses the MockHttpServletRequest
  compileOnly "org.springframework:spring-test"

  //used for bundled Test traits
  compileOnly "org.grails:grails-gorm-testing-support"
  compileOnly "org.grails:grails-web-testing-support"
  compileOnly "org.grails.plugins:build-test-data:$versionBuildTestData"

  testCompile "org.grails.plugins:geb"
  testCompile "org.grails:grails-plugin-testing"

  testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
  testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

bootRun {
    jvmArgs('-Dspring.output.ansi.enabled=always')
    addResources = true
}


assets {
  packagePlugin = true
}
