(function() {
    var SampleData, dataGenerator;
    dataGenerator = angular.module("angleGrinder.dataGenerator", []);
    dataGenerator.value("random", {
        "range": function(min, max) {
            return Math.floor(Math.random() * (max - min) + min);
        },
        "date": function(minDate, maxDate) {
            var date, day, max, min, month, randomMilis, year;
            if (maxDate == null) {
                maxDate = new Date();
            }
            min = minDate.getTime();
            max = maxDate.getTime();
            randomMilis = this.range(min, max);
            date = new Date(randomMilis);
            year = date.getFullYear();
            month = ("0" + (date.getUTCMonth() + 1)).slice(-2);
            day = ("0" + date.getUTCDate()).slice(-2);
            return "" + year + "-" + month + "-" + day;
        }
    });
    SampleData = function() {
        SampleData.$inject = [ "random" ];
        function SampleData(random) {
            this.random = random;
        }
        SampleData.prototype.generate = function(count) {
            var id, rows, _i;
            if (count == null) {
                count = 50;
            }
            rows = [];
            for (id = _i = 1; 1 <= count ? _i <= count : _i >= count; id = 1 <= count ? ++_i : --_i) {
                rows.push({
                    "id": id,
                    "invoiceDate": this.random.date(new Date(2001, 1, 1)),
                    "tranDate": this.random.date(new Date(2001, 1, 1)),
                    "customer": {
                        "name": "Test Customer " + id
                    },
                    "name": "Test Item " + id,
                    "description": "Test Description " + id,
                    "note": "Note number " + id,
                    "amount": this.random.range(20, 200) / 10,
                    "tax": this.random.range(10, 100) / 10,
                    "total": this.random.range(100, 1e3) / 10,
                    "complete": Math.random() > .5
                });
            }
            return rows;
        };
        return SampleData;
    }();
    dataGenerator.factory("sampleData", [ "$injector", function($injector) {
        return $injector.instantiate(SampleData);
    } ]);
}).call(this);