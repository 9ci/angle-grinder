buildscript {
    repositories {
        mavenLocal()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate4:6.0.4"
        classpath "org.grails.plugins:views-gradle:1.1.2"
    }
}

version "0.1"
group "resttutorial"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.plugins.views-json"

repositories {
    mavenLocal()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-codecs"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-datasource"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-async"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:hibernate4"
    compile "org.hibernate:hibernate-core:4.3.11.Final"
    compile "org.hibernate:hibernate-ehcache:4.3.11.Final"
    compile "org.grails.plugins:views-json"
    compile "org.grails.plugins:views-json-templates"
    console "org.grails:grails-console"
    profile "org.grails.profiles:rest-api"
    runtime "com.h2database:h2"
    testCompile "org.grails:grails-plugin-testing"

    /****** GEB *******/
    def webdriverVersion = "2.53.1"

    testCompile("org.grails.plugins:geb",
            "org.seleniumhq.selenium:selenium-support:${webdriverVersion}",
            "org.seleniumhq.selenium:selenium-chrome-driver:${webdriverVersion}",
            "org.seleniumhq.selenium:selenium-firefox-driver:${webdriverVersion}",
            "org.seleniumhq.selenium:selenium-ie-driver:${webdriverVersion}")

    // see https://github.com/codeborne/ghostdriver
    testCompile("com.codeborne:phantomjsdriver:1.3.0") {
        // phantomjs driver pulls in a different selenium version amongs other stuff it seemed
        transitive = false
    }
    // see https://github.com/bonigarcia/webdrivermanager
    testCompile "io.github.bonigarcia:webdrivermanager:1.4.9"
    /** GEB end */


    testCompile "org.grails:grails-datastore-rest-client"
    testRuntime "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntime "net.sourceforge.htmlunit:htmlunit:2.18"
}

/****** GEB *******
 Pass system properties through to the integrationTest task so we can pass in the 'geb.env' property to run tests
 in different browsers. Adapted from http://mrhaki.blogspot.com/2015/09/grails-goodness-passing-system.html
 */
integrationTest {
    systemProperties System.properties
}

bootRun {
    jvmArgs = ['-Dspring.output.ansi.enabled=always']
}
