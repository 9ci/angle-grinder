// Overrides and extras

@mixin ripple(){
  position: relative;
  overflow: hidden;
  transform: translate3d(0, 0, 0);

  &:after {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
    background-image: radial-gradient(circle, #000 10%, transparent 10.01%);
    background-repeat: no-repeat;
    background-position: 50%;
    transform: scale(10,10);
    opacity: 0;
    transition: transform .5s, opacity 1s;
  }

  &:active:after {
    transform: scale(0,0);
    opacity: .2;
    transition: 0s;
  }
}

//$shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
$shadow-large: 0px 5px 5px -3px rgba(0, 0, 0, 0.2), 0px 8px 10px 1px rgba(0, 0, 0, 0.14), 0px 3px 14px 2px rgba(0, 0, 0, 0.12);

@mixin btn($class,$bg){
  .btn-#{$class} {
    background-size: 200% 200%;
    background-position: 50%;

    &:focus {
      background-color: $bg;
    }

    &:hover,
    &:active:hover {
      background-color: lighten($bg,4%);
    }

    &:active {
      background-color: darken($bg,12%);
      @include gradient-radial(darken($bg, 12%) 10%, $bg 11%);
      background-size: 1000% 1000%;
      box-shadow: 2px 2px 4px rgba(0,0,0,.4);
    }
  }
}

//@include btn(default, $button-background-color);
@include btn(primary,$primary);
@include btn(success,$success);
@include btn(info,$info);
@include btn(warning,$warning);
@include btn(danger,$danger);
@include btn(link,#fff);

$shadow2:  0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);
$shadow1: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);

.btn {
  // text-transform: uppercase;
  // border: none;
  box-shadow: $shadow1;
  // transition: all 0.4s;
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),
  background-color 300ms ease;
  position: relative;
  overflow: hidden;
  transform: translate3d(0, 0, 0);

  &-link {
    border-radius: $control-radius;
    box-shadow: none;
    color: $button-color;

    &:hover,
    &:focus {
      box-shadow: none;
      color: $button-color;
      text-decoration: none;
    }
  }

  &-default {

    &.disabled {
      background-color: rgba(0, 0, 0, 0.1);
      color: rgba(0, 0, 0, 0.4);
      opacity: 1;
    }
  }

  &:after {
    content: "";
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
    background-image: radial-gradient(circle, #000 10%, transparent 10.01%);
    background-repeat: no-repeat;
    background-position: 50%;
    transform: scale(10,10);
    opacity: 0;
    transition: transform .5s, opacity 1s;
  }
  &:active:after {
    transform: scale(0,0);
    opacity: .2;
    transition: 0s;
  }
}


// Material looking buttons

.button {
  //border-radius: 3px;
  box-shadow: $shadow1;
  text-transform: uppercase;
  //font-weight: 500;
  transition: box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1),
  background-color 300ms ease;
  position: relative;
  overflow: hidden;
  transform: translate3d(0, 0, 0);

  &.is-hovered,
  &:hover {
    border-color: transparent;
    background-color: darken($button-background-color, 5);
  }

  &.is-active,
  &:active {
    box-shadow: $shadow-large;
  }

  &.is-focused,
  &:focus {
    border-color: transparent;
  }

  @each $name, $pair in $colors {
    $color: nth($pair, 1);
    $color-invert: nth($pair, 2);

    &.is-#{$name} {
      &.is-hovered,
      &:hover {
        background-color: darken($color, 5);
      }

      &.is-active,
      &:active {
        box-shadow: $shadow-large;
      }
    }
  }

  &.is-text {
    box-shadow: none;
  }

  &:before {
    content: '';
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    pointer-events: none;
    background-image: radial-gradient(circle, #000 10%, transparent 10.01%);
    background-repeat: no-repeat;
    background-position: 50%;
    transform: scale(10, 10);
    opacity: 0;
    transition: transform 0.5s, opacity 1s;
  }

  &:active:before {
    transform: scale(0, 0);
    opacity: 0.2;
    transition: 0s;
  }
}

